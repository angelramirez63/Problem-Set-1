salary_plot
salary_plot
max(db$y_ingLab_m_ha)
salary_plot_2 <-ggplot(data = db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_2
salary_plot_2 <-ggplot(data = db, mapping = aes( x = age , y = y_ingLab_m_ha, group = female)) +
geom_line()
salary_plot_2
rm(salary_plot_2)
db_outliers <- db_outliers %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60)
View(db_outliers)
table(db_outliers$age)
table (db$age)
low <- mean(db$y_total_m_ha) - 2* sd(db$y_ingLab_m_ha)
up <- mean(db$y_ingLab_m_ha) + 2* sd(db$y_total_m_ha)
30000 > up
#Función de densidad de la variable ingreso salarial por hora:
#La distribución tiene una cola izquierda pesada y una larga cola derecha
density_plot_y_ingLab_m_ha <- ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = median(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "red") +
geom_vline(xintercept = mean(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_y_ingLab_m_ha
db_original <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
density_plot_y_ingLab_m_ha_2 <- ggplot(db_original, aes(x = db_original$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = median(db_original$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "red") +
geom_vline(xintercept = mean(db_original$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_y_ingLab_m_ha_2
density_plot_sigma_rule <-  ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = low, linetype = "dashed", color = "red") +
geom_vline(xintercept = up, linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_sigma_rule
max(db$y_ingLab_m_ha)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha == 41253.7, 1, 0))
table(db_outliers$flag)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha == 41253.70, 1, 0))
table(db_outliers$flag)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha >= 41253.70, 1, 0))
table(db_outliers$flag)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha < 41253.70, 1, 0))
table(db_outliers$flag)
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha > 41253, 1, 0))
table(db_outliers$flag)
table(db_outliers$age)
table(db$age)
db_sin_outliers <- db %>%
filter(low < y_ingLab_m_ha & y_ingLab_m_ha < up)
#i) Colapsar la base a nivel de edad y salario por género (otra vez)
average_salary_per_age_db  <- db_sin_outliers %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
max(db_sin_outliers$y_ingLab_m_ha)
salary_plot_1
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_1
db_sin_outliers <- db %>%
filter(low < y_ingLab_m_ha & y_ingLab_m_ha < up)
#i) Colapsar la base a nivel de edad y salario por género (otra vez)
average_salary_per_age_db  <- db_sin_outliers %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_2 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_2
table(db_sin_outliers$age)
#Quitar años con menos de 25 observaciones:
average_salary_per_age_db <- average_salary_per_age_db %>%
filter(18< age &  age < 66)
table(db_sin_outliers$age)
db_sin_outliers <- db %>%
filter(low < y_ingLab_m_ha & y_ingLab_m_ha < up) %>%
filter(18< age &  age < 66)
table(db_sin_outliers$age)
#i) Colapsar la base a nivel de edad y salario por género (otra vez)
average_salary_per_age_db  <- db_sin_outliers %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_2 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
table(average_salary_per_age_db$age)
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_2 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_2
table(db$sizeFirm)
table(db$nivel_educ)
average_salary_per_age_db_original <- db_original %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
db_original <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
db_original <- db_original %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
filter(is.na(y_ingLab_m_ha) == F)
select(-sex)
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db_original <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
db_original <- db_original %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
filter(is.na(y_ingLab_m_ha) == F)
select(-sex)
db_original <- db_original %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
filter(is.na(y_ingLab_m_ha) == F)
select(-sex)
db_original <- db_original %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
filter(is.na(y_ingLab_m_ha) == F) %>%
select(-sex)
average_salary_per_age_db_original <- db_original %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
salary_plot_db_original <-ggplot(data = average_salary_per_age_db_original, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_db_original
table(db_original$age)
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
#Función de densidad de la variable ingreso salarial por hora:
#La distribución tiene una cola izquierda pesada y una larga cola derecha
density_plot_y_ingLab_m_ha <- ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = median(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "red") +
geom_vline(xintercept = mean(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_y_ingLab_m_ha
low <- mean(db$y_total_m_ha) - 2* sd(db$y_ingLab_m_ha)
up <- mean(db$y_ingLab_m_ha) + 2* sd(db$y_total_m_ha)
density_plot_sigma_rule <-  ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = low, linetype = "dashed", color = "red") +
geom_vline(xintercept = up, linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_sigma_rule
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_1
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
wd <- here()
setwd(wd)
rm(wd)
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
set.seed(123)
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
density_plot_y_ingLab_m_ha <- ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = median(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "red") +
geom_vline(xintercept = mean(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_y_ingLab_m_ha
box_plot_y_ingLab_m_ha<- ggplot(db , mapping = aes(as.factor(estrato1),  y_ingLab_m_ha)) +
geom_boxplot() +
ggtitle("Box plot salarial por horas por estrato")
box_plot_y_ingLab_m_ha
skim(db)
box_plot_y_ingLab_m_ha_no_group<- ggplot(db , mapping = aes( y_ingLab_m_ha)) +
geom_boxplot() +
ggtitle("Box plot salarial")
low <- mean(db$y_total_m_ha) - 2* sd(db$y_ingLab_m_ha)
up <- mean(db$y_ingLab_m_ha) + 2* sd(db$y_total_m_ha)
density_plot_sigma_rule <-  ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = low, linetype = "dashed", color = "red") +
geom_vline(xintercept = up, linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
density_plot_sigma_rule
#(i) Regresión auxiliar de female en los controles: representa la parte de female que no esta explicada por los controles
db <- db %>% mutate(female_resid = lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio  ,data = db)$residuals)
#(ii) Regresión auxiliar de ln_sal en los controles: representa la parte de ln_sal que no esta explicada por los controles
db <- db %>% mutate(ln_sal_resid = lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio  ,data = db)$residuals)
#(iii) regresar los residuales de la variable resultado (ii) en los residuales de la variable de interés (iii):
modelo_4b_fwl <- lm(ln_sal_resid ~ female_resid, data = db)
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio  ,data = db)
stargazer(modelo4b, type = "text", omit = "oficio")
stargazer(modelo4b, modelo_4b_fwl, type = "text", omit = c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin"))
?`stargazer-package`
partialling_out <- function (data, index) {
#Función partialling-out: Esta función hace
db_resid <- data.frame(row.names = 1:nrow(data))
db_resid$x_resid <- lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio, data = data, subset = index )$residuals
db_resid$y_resid <- lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio, data = data, subset = index)$residuals
coef(lm( y_resid ~ x_resid, data = db_resid, subset = index))[2]
}
partialling_out(db, 1:nrow(db))
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_1
db_outliers <- db %>%
select(y_ingLab_m_ha, age, female) %>%
filter(y_ingLab_m_ha >30000) %>%
filter( age > 60) %>%
mutate(flag = ifelse(y_ingLab_m_ha > 41253, 1, 0))
db_sin_outliers <- db %>%
filter(low < y_ingLab_m_ha & y_ingLab_m_ha < up) %>%
filter(18< age &  age < 66)
average_salary_per_age_db  <- db_sin_outliers %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_2 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_2
salary_plot_test <- ggplot(data = average_salary_per_age_db, mapping = aes(x = age, y = mean_salary_per_hour, group = female))+
geom_point() +
geom_smooth(method = "loess", se = FALSE) +
theme_minimal()
salary_plot_test
salary_plot_2
salary_plot_test <- ggplot(data = average_salary_per_age_db, mapping = aes(x = age, y = mean_salary_per_hour, group = female))+
geom_smooth(method = "gam", se = FALSE) +
theme_minimal()
salary_plot_test
salary_plot_test <- ggplot(data = average_salary_per_age_db, mapping = aes(x = age, y = mean_salary_per_hour, group = female))+
geom_smooth(method = "looses", se = FALSE) +
theme_minimal()
salary_plot_test
salary_plot_test <- ggplot(data = average_salary_per_age_db, mapping = aes(x = age, y = mean_salary_per_hour, group = female))+
geom_smooth(method = "loess", se = FALSE) +
theme_minimal()
salary_plot_test
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
wd <- here()
setwd(wd)
rm(wd)
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
##3.1) Modelo####
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)
stargazer(modelo4b, type = "text", omit = "oficio")
stargazer(modelo4b, type = "text", omit =  c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"))
modelo4b2 <- lm(ln_sal ~ female + nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio, data = db)
stargazer(modelo4b, modelo4b2,type = "text", omit =  c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"))
rm(modelo4b2)
#(i) Regresión auxiliar de female en los controles: representa la parte de female que no esta explicada por los controles
db <- db %>% mutate(female_resid = lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)$residuals)
#(ii) Regresión auxiliar de ln_sal en los controles: representa la parte de ln_sal que no esta explicada por los controles
db <- db %>% mutate(ln_sal_resid = lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)$residuals)
#(iii) regresar los residuales de la variable resultado (ii) en los residuales de la variable de interés (iii):
modelo_4b_fwl <- lm(ln_sal_resid ~ female_resid, data = db)
stargazer(modelo4b, modelo_4b_fwl, type = "text", omit = c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"))
partialling_out <- function (data, index) {
#Función partialling-out: Esta función hace
db_resid <- data.frame(row.names = 1:nrow(data))
db_resid$x_resid <- lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio, data = data, subset = index )$residuals
db_resid$y_resid <- lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio, data = data, subset = index)$residuals
coef(lm( y_resid ~ x_resid, data = db_resid, subset = index))[2]
}
partialling_out <- function (data, index) {
#Función partialling-out: Esta función hace partilling-out para estimar el si hay una brecha de género en el salario por hora. La función
#------------------------ usa explica el salario por hora usando el nivel de educación, la edad, el tamaño de la firma, si es formal o informal,
# las horas que trabajo en su ocupación pricipal, la ocupación y el estrato de la persona
#Parámetros:
#----------
#db: base de datos con la información de la GEIH
#index: número de observacione de la base de datos el índice para facilitar usar esta función con el
#       paquete boot
#Return: el coeficiente de la variable female obtenido al hacer partillaing out
#-------
db_resid <- data.frame(row.names = 1:nrow(data))
db_resid$x_resid <- lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1, data = data, subset = index )$residuals
db_resid$y_resid <- lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1, data = data, subset = index)$residuals
coef(lm( y_resid ~ x_resid, data = db_resid, subset = index))[2]
}
partialling_out(db, 1:nrow(db))
#R = 1000
female_boostrap_se_R1000 <-boot(db,partialling_out, R = 1000)
View(modelo_4b_fwl)
##3.1) Modelo####
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)
View(modelo4b)
?lm
db$ln_sal_predicted <- predict(modelo_4b_fwl)
db$ln_sal_predicted
stargazer(modelo4b, modelo_4b_fwl, type = "text", omit = c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"))
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(ln_sal_predicted))
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = ln_sal_predicted, group = female)) +
geom_line()
salary_plot_1
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
salary_plot_1
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
filter(18< age &  age < 66) %>%
as_tibble()
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
filter(18< age &  age < 66) %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
##1.2) Visualizar variable salario nominal por hora####
#Función de densidad de la variable ingreso salarial por hora:
#La distribución tiene una cola izquierda pesada y una larga cola derecha
density_plot_y_ingLab_m_ha <- ggplot(db, aes(x = db$y_ingLab_m_ha)) +
geom_density(fill = "blue", alpha = .2) +
geom_line(stat = "density") +
geom_vline(xintercept = median(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "red") +
geom_vline(xintercept = mean(db$y_ingLab_m_ha, na.rm = TRUE), linetype = "dashed", color = "gray") +
ggtitle("Densidad ingreso salarial por horas")
db_sin_outliers <- db %>%
filter(low < y_ingLab_m_ha & y_ingLab_m_ha < up) %>%
filter(18< age &  age < 66)
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(ln_sal_predicted))
db <- db %>% mutate(female_resid = lm(female ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)$residuals)
#(ii) Regresión auxiliar de ln_sal en los controles: representa la parte de ln_sal que no esta explicada por los controles
db <- db %>% mutate(ln_sal_resid = lm(ln_sal ~ nivel_educ + age + sizeFirm + formal + horas_ocup_prin + oficio + estrato1 ,data = db)$residuals)
#(iii) regresar los residuales de la variable resultado (ii) en los residuales de la variable de interés (iii):
modelo_4b_fwl <- lm(ln_sal_resid ~ female_resid, data = db)
stargazer(modelo4b, modelo_4b_fwl, type = "text", omit = c("oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"))
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(ln_sal_predicted))
##4.2) Hacer un gráfico preliminar de la relación ingreso/edad por género####
salary_plot_1 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female)) +
geom_line()
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(ln_sal_predicted))
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
db <- readRDS("stores/datos_modelos.rds") %>%
filter(18< age &  age < 66) %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = ifelse(sex == 0, yes = 1 , no = 0)) %>%
select(-sex)
