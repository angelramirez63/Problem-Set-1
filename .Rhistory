p6510s2, p6545s2, p6580s2, p6585s1a2, p6585s2a2,
p6585s3a2, p6585s4a2, p6590s1, p6600s1, p6610, p6620,
p6630s1, p6630s2, p6630s3, p6630s4, p6630s6, p6750,
p6760, p6870, p6920, p7040, p7050, p7310, p7350,
regSalud, relab, sizeFirm), as.factor))
print(db$p6020)
View(db)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, tipo_vivienda = p5090,
material_piso = p5130, material_pared = p5140,
material_techo = p5150, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, material_piso = p5130,
material_pared = p5140, material_techo = p5150, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920)
View(db_limpia)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_trabajadas = p6800,
horas_ocup_prin = p7040, subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510s2, p6545s2, p6580s2,
p6585s1a2, p6585s2a2, p6585s3a2, p6585s4a2, p6590s1,
p6600s1, p6610, p6620,p6630s1, p6630s2, p6630s3,
p6630s4, p6630s6, p6750, p6760, p6870, p6920, p7040,
p7050, p7310, p7350, regSalud, relab, sizeFirm),
as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_trabajadas = p6800,
horas_ocup_prin = p7040, subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510s2, p6545s2, p6580s2,
p6585s1a2, p6585s2a2, p6585s3a2, p6585s4a2, p6590s1,
p6600s1, p6610, p6620,p6630s1, p6630s2, p6630s3,
p6630s4, p6630s6, p6750, p6760, p6870, p6920, p7040,
p7050, p7310, p7350, regSalud, relab, sizeFirm),
as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422)
View(db_limpia)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510, p6510s2, p6545,
p6545s2, p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590s1, p6600s1, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6750, p6760, p6870,
p6920, p7040, p7050, p7310, p7350, regSalud, relab,
sizeFirm), as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310, p7350,
p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422, recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
summary(db_limpia$ocu)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db <- db %>%
filter(age >= 18 & ocu == 1)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(age >= 18 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(wap == 1 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422, recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(datos_GEIH)) * 100
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(db_limpia)) * 100
# Seleccionar las variables con menos del 50% de valores missing
db_limpia <- datos_GEIH[, missing_percent <= 50]
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(db_limpia)) * 100
# Seleccionar las variables con menos del 50% de valores missing
db_limpia <- db_limpia[, missing_percent <= 50]
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(wap == 1 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7,
cclasnr8, college, cotPension, cuentaPropia, formal, informal,
microEmpresa, sex, estrato1, maxEducLevel, oficio, p6050, p6090,
p6100, p6210, p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2, p6585s2a2, p6585s3,
p6585s3a2, p6585s4, p6585s4a2, p6590, p6600, p6610, p6620,
p6630s1, p6630s2, p6630s3,p6630s4, p6630s6, p6920, p7040,
p7050, p7505, regSalud, relab, sizeFirm), as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
recibe_ing_hor_ext = p6510, ingreso_hor_ext = p6510s1)
# Eliminamos las variables para las cuales más del 60% de las observaciones son faltantes
missing_percent <- colMeans(is.na(db_limpia)) * 100
db_limpia <- db_limpia[, missing_percent <= 60]
View(db_limpia)
#Problem Set 1 -----------------------------------------------------------------
rm(list = ls())
#0. Preparación ----------------------------------------------------------------
# Librerías
if(!require(pacman)) install.packages("pacman") ; require(pacman)
library(pacman)
p_load(tidyverse, rvest, rebus, htmltools, rio, skimr,
visdat, margins, stargazer, here, VIM)
# Crear el directorio
wd <- here()
setwd(wd)
rm(wd)
p_load(caret)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(wap == 1 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7,
cclasnr8, college, cotPension, cuentaPropia, formal, informal,
microEmpresa, sex, estrato1, maxEducLevel, oficio, p6050, p6090,
p6100, p6210, p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2, p6585s2a2, p6585s3,
p6585s3a2, p6585s4, p6585s4a2, p6590, p6600, p6610, p6620,
p6630s1, p6630s2, p6630s3,p6630s4, p6630s6, p6920, p7040,
p7050, p7505, regSalud, relab, sizeFirm), as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
recibe_ing_hor_ext = p6510, ingreso_hor_ext = p6510s1)
# Eliminamos las variables para las cuales más del 60% de las observaciones son faltantes
missing_percent <- colMeans(is.na(db_limpia)) * 100
db_limpia <- db_limpia[, missing_percent <= 60]
library(dplyr)
library(caret)
View(db_limpia)
# Calcular la matriz de correlación, ignorando NAs
cor_matrix <- cor(db_numerica, use = "pairwise.complete.obs")
# Eliminamos variables altamente correlacionadas
db_numerica <- db_limpia %>%
select(where(is.numeric)) %>%
select(!starts_with("y_"))
# Calcular la matriz de correlación, ignorando NAs
cor_matrix <- cor(db_numerica, use = "pairwise.complete.obs")
# Revisar si hay valores NA en la matriz de correlación
if (any(is.na(cor_matrix))) {
print("¡Atención! Hay valores NA en la matriz de correlación.")
} else {
# Identificar pares de variables con correlación ≥ 0.9
highly_correlated <- which(abs(cor_matrix) >= 0.9999, arr.ind = TRUE)
highly_correlated <- highly_correlated[highly_correlated[,1] != highly_correlated[,2], ]
# Obtener nombres de variables correlacionadas
correlated_vars <- unique(rownames(highly_correlated))
# Mantener solo la primera variable de cada grupo
vars_to_keep <- unique(highly_correlated[,1])  # Índices de variables a conservar
vars_to_remove <- setdiff(correlated_vars, colnames(db_numerica)[vars_to_keep])  # Variables a eliminar
# Filtrar la base de datos
db_numerica_clean <- db_numerica[, !names(db_numerica) %in% vars_to_remove]
# Reunir con variables no numéricas
db_limpia <- bind_cols(db_numerica_clean, db_limpia %>% select(where(negate(is.numeric))))
}
rm(list = c(db_numerica, db_numerica_clean, highly_correlated, correlated_vars, missing_percent,
vars_to_keep, vars_to_remove))
rm(db_numerica, db_numerica_clean, highly_correlated, correlated_vars, missing_percent,
vars_to_keep, vars_to_remove)
#Problem Set 1 -----------------------------------------------------------------
rm(list = ls())
#0. Preparación ----------------------------------------------------------------
# Librerías
if(!require(pacman)) install.packages("pacman") ; require(pacman)
library(pacman)
p_load(tidyverse, rvest, rebus, htmltools, rio, skimr,
visdat, margins, stargazer, here, VIM, caret)
# Crear el directorio
wd <- here()
setwd(wd)
rm(wd)
#2.1. Obtener datos ------------------------------------------------------------
# Link para el web scrapping
link_GEIH <- "https://ignaciomsarmiento.github.io/GEIH2018_sample"
datos_GEIH <-data.frame()
for(page in 1:10) {
# Obtenemos la tabla con los datos de cada página
tabla <- read_html(paste0(link_GEIH, "/pages/geih_page_", page, ".html")) %>%
html_table() %>%
as.data.frame()
# Agregamos la nueva tabla a nuestra base de datos
datos_GEIH <- bind_rows(datos_GEIH, tabla)
#Registro de progreso
print(paste("Página:", page))
}
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
summary(is.NA(ocu))
summary(is.na(ocu))
summary(is.NA(db&ocu))
summary(is.NA(db$ocu))
summary(is.na(db$ocu))
summary(is.na(db$dsi))
summary(db$dsi)
colMeans(db$dsi)
mean(db$dsi)
mean(db$ocu)
sum(db$dsi=1)
sum(db$dsi==1)
sum(db$ocu=0)
sum(db$ocu==1)
sum(db$ocu==1)
sum(db$inac==1)
sum(db$dsi==1)
sum(db$ocu==1 & db$informal==1)
sum(db$informal==1)
summary(db$informal)
table(db$informal)
sum(db$informal==1)
