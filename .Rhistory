if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
gridExtra, # visualizing missing data
corrplot, # Correlation Plots
stargazer, # tables/output to TEX.
MASS # various statistical functions
)
#Cargar datos:
db <- import("https://github.com/ignaciomsarmiento/datasets/blob/main/GEIH_sample1.Rds?raw=true")
db <- as_tibble(db) %>% rename(gender=sex)
cat("\014")
rm(list= ls())
# install pacman
if(!require(pacman)) install.packages("pacman") ; require(pacman)
#require/install packages on this session
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
visdat, # visualizing missing data
corrplot, # Correlation Plots
stargazer) # tables/output to TEX.
df <- import("https://github.com/ignaciomsarmiento/datasets/blob/main/GEIH_sample1.Rds?raw=true")
db <- as_tibble(df) ## from dataframe to tibble
#i) we can use skim as a dataset. Se conservan los nombres de las variables y el número
# de missings por variable.
db_miss <- skim(db) %>% select( skim_variable, n_missing)
rm(list = ls())
cat("\014")
###Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(rio, # import/export data
tidyverse, # tidy-data
skimr, # summary data
visdat, # visualizing missing data
corrplot, # Correlation Plots
stargazer, # tables/output to TEX.
here) # Ubicación de archivos
setwd(wd)
#ii) Definir el directorio
wd <- paste(here(),"/stores", sep = "")
setwd(wd)
#iii) Cargar los datos:
db <- readRDS("datos_GEIH.rds") %>%
as_tibble()
db_miss <- skim(db) %>% select( skim_variable, n_missing)
rm(db_miss)
db_miss <- db_miss %>% select(skim_variable, n_missing)
db_miss <- skim(db) %>% select(skim_variable, n_missing)
getwd()
here()
#Problem Set 1 -----------------------------------------------------------------
rm(list = ls())
#0. Preparación ----------------------------------------------------------------
# Librerías
if(!require(pacman)) install.packages("pacman") ; require(pacman)
library(pacman)
p_load(tidyverse, rvest, rebus, htmltools, rio, skimr,
visdat, margins, stargazer, here)
# Crear el directorio
wd <- here()
setwd(wd)
rm(wd)
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
datos_GEIH <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
rm(datos_GEIH)
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, clase, college,
cotPension, cuentaPropia, dsi, formal, informal,
ina, inac, microEmpresa, ocu, pea, pet, sex, wap,
depto, dominio, estrato1, maxEducLevel, mes, oficio,
p6050, p6090, p6100, p6210, p6210s1, p6240, p6426,
p6500, p6510s2, p6545s2, p6580s2, p6585s1a2,
p6585s2a2, p6585s3a2, p6585s4a2, p6590s1, p6600s1,
p6610, p6620, p6630s1, p6630s2, p6630s3, p6630s4,
p6630s6, p6750, p6760, p6870, p6920, p7040, p7050,
p7310, p7350, regSalud, relab, sizeFirm), as.factor))
rlang::last_trace()
# Define the vector of categorical variables
categorical_vars <- c("cclasnr11", "cclasnr2", "cclasnr3", "cclasnr4", "cclasnr5",
"cclasnr6", "cclasnr7", "cclasnr8", "clase", "college", "cotPension",
"cuentaPropia", "dsi", "formal", "ina", "inac", "informal",
"microEmpresa", "ocu", "pea", "pet", "regSalud", "relab", "sex",
"sizeFirm", "wap")
# Check which of these variables are in the dataset
existing_vars <- categorical_vars[categorical_vars %in% names(db_limpia)]
missing_vars <- categorical_vars[!categorical_vars %in% names(db_limpia)]
# Print results
cat("Variables found in dataset:\n", existing_vars, "\n")
cat("Variables NOT found in dataset:\n", missing_vars, "\n")
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, depto,
dominio, estrato1, maxEducLevel, mes, oficio, p6050,
p6090, p6100, p6210, p6210s1, p6240, p6426, p6500,
p6510s2, p6545s2, p6580s2, p6585s1a2, p6585s2a2,
p6585s3a2, p6585s4a2, p6590s1, p6600s1, p6610, p6620,
p6630s1, p6630s2, p6630s3, p6630s4, p6630s6, p6750,
p6760, p6870, p6920, p7040, p7050, p7310, p7350,
regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap,
dominio, estrato1, maxEducLevel, mes, oficio, p6050,
p6090, p6100, p6210, p6210s1, p6240, p6426, p6500,
p6510s2, p6545s2, p6580s2, p6585s1a2, p6585s2a2,
p6585s3a2, p6585s4a2, p6590s1, p6600s1, p6610, p6620,
p6630s1, p6630s2, p6630s3, p6630s4, p6630s6, p6750,
p6760, p6870, p6920, p7040, p7050, p7310, p7350,
regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050,
p6090, p6100, p6210, p6210s1, p6240, p6426, p6500,
p6510s2, p6545s2, p6580s2, p6585s1a2, p6585s2a2,
p6585s3a2, p6585s4a2, p6590s1, p6600s1, p6610, p6620,
p6630s1, p6630s2, p6630s3, p6630s4, p6630s6, p6750,
p6760, p6870, p6920, p7040, p7050, p7310, p7350,
regSalud, relab, sizeFirm), as.factor))
print(db$p6020)
View(db)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, tipo_vivienda = p5090,
material_piso = p5130, material_pared = p5140,
material_techo = p5150, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, material_piso = p5130,
material_pared = p5140, material_techo = p5150, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, num_cuartos = p5210,
num_dorms = p5210s1, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, acceso_agua = p5240,
acceso_bano = p5290, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920, conex_int = p5302,
tenencia_viv = p5090)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
nivel_educ = p6210, grad_aprob = p6210s1,
actividad_prin = p6240, tiempo_trabaj = p6426,
cotiza_pens = p6920)
View(db_limpia)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_trabajadas = p6800,
horas_ocup_prin = p7040, subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510s2, p6545s2, p6580s2,
p6585s1a2, p6585s2a2, p6585s3a2, p6585s4a2, p6590s1,
p6600s1, p6610, p6620,p6630s1, p6630s2, p6630s3,
p6630s4, p6630s6, p6750, p6760, p6870, p6920, p7040,
p7050, p7310, p7350, regSalud, relab, sizeFirm),
as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_trabajadas = p6800,
horas_ocup_prin = p7040, subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050,
tipo_contrato = p7090, afiliado_pension = p7110,
afiliado_salud = p7120, busca_trabajo = p7250)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510s2, p6545s2, p6580s2,
p6585s1a2, p6585s2a2, p6585s3a2, p6585s4a2, p6590s1,
p6600s1, p6610, p6620,p6630s1, p6630s2, p6630s3,
p6630s4, p6630s6, p6750, p6760, p6870, p6920, p7040,
p7050, p7310, p7350, regSalud, relab, sizeFirm),
as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422)
View(db_limpia)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, mes, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6426, p6500, p6510, p6510s2, p6545,
p6545s2, p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590s1, p6600s1, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6750, p6760, p6870,
p6920, p7040, p7050, p7310, p7350, regSalud, relab,
sizeFirm), as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310, p7350,
p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422, recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
summary(db_limpia$ocu)
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db <- db %>%
filter(age >= 18 & ocu == 1)
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(age >= 18 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4, cclasnr5,
cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, dsi, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, ina, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, inac,
microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, ocu, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, pea, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, pet, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
#2.2. Limpieza de datos ---------------------------------------------------------
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(wap == 1 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, wap, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7310,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050,
p7350, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7, cclasnr8, college, cotPension,
cuentaPropia, formal, informal, microEmpresa, sex, estrato1,
maxEducLevel, oficio, p6050, p6090, p6100, p6210,
p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2,
p6585s2a2, p6585s3, p6585s3a2, p6585s4, p6585s4a2,
p6590, p6600, p6610, p6620, p6630s1, p6630s2,
p6630s3,p6630s4, p6630s6, p6920, p7040, p7050, p7505, regSalud, relab, sizeFirm), as.factor))
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
categ_ocup = p7422, recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
recibe_ing_hor_ext = p6510,
ingreso_hor_ext = p6510s1)
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(datos_GEIH)) * 100
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(db_limpia)) * 100
# Seleccionar las variables con menos del 50% de valores missing
db_limpia <- datos_GEIH[, missing_percent <= 50]
# Calcular el porcentaje de missings por columna
missing_percent <- colMeans(is.na(db_limpia)) * 100
# Seleccionar las variables con menos del 50% de valores missing
db_limpia <- db_limpia[, missing_percent <= 50]
rm(list = ls())
db <- readRDS("stores/datos_GEIH.rds") %>%
as_tibble()
#i) la condicción para conservar la observación es:  age == edad_personas , ocu === dummy_si_la_persona esta ocupada
db_limpia <- db %>%
filter(wap == 1 & ocu == 1)
#Eliminar variables de solo missings o que no tienen variación
db_limpia <- db_limpia %>% select_if(~ !all(is.na(.)) & length(unique(.))>1)
#Convertir variables categoricas en factores
db_limpia <- db_limpia %>%
mutate(across(c(cclasnr11, cclasnr2, cclasnr3, cclasnr4,cclasnr6, cclasnr7,
cclasnr8, college, cotPension, cuentaPropia, formal, informal,
microEmpresa, sex, estrato1, maxEducLevel, oficio, p6050, p6090,
p6100, p6210, p6210s1, p6240, p6510, p6510s2, p6545, p6545s2,
p6580, p6580s2, p6585s1, p6585s1a2, p6585s2, p6585s2a2, p6585s3,
p6585s3a2, p6585s4, p6585s4a2, p6590, p6600, p6610, p6620,
p6630s1, p6630s2, p6630s3,p6630s4, p6630s6, p6920, p7040,
p7050, p7505, regSalud, relab, sizeFirm), as.factor))
#Renombramos variables para facilitar el manejo de datos
db_limpia <- db_limpia %>% rename(parentesco_jefe = p6050, segur_social = p6090,
regim_segur_social =p6100, nivel_educ = p6210,
grad_aprob = p6210s1, actividad_prin = p6240,
tiempo_trabaj = p6426, cotiza_pens = p6920,
ingreso_laboral = p6500, horas_ocup_prin = p7040,
subempleado = p7050, tipo_contrato = p7090,
afiliado_pension = p7110, afiliado_salud = p7120,
recibe_ing_hor_ext = p6510, ingreso_hor_ext = p6510s1)
# Eliminamos las variables para las cuales más del 60% de las observaciones son faltantes
missing_percent <- colMeans(is.na(db_limpia)) * 100
db_limpia <- db_limpia[, missing_percent <= 60]
View(db_limpia)
