#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
modelo4a <- lm(ln_sal ~ female, data = db)
##3.1) Modelo####
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0)) %>%
mutate(age2 = age^2)
##3.1) Modelo####
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + age2 + sizeFirm + formal + oficio + estrato1 ,data = db)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
#-----------------------  Punto 4 The Gender Earning Gap -----------------------
#0) Alistar ambiente de trabajo ------------------------------------------------
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
#1) Organizar y limpiar datos antes de estimar el modelo -----------------------
#1.1) Volver female una variable númerica para poder usarla como variable de respuesta usando lm()
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
#2) Estimar el primero modelo sin controles  -----------------------------------
modelo4a <- lm(ln_sal ~ female, data = db)
stargazer(modelo4a, type = "text", star.cutoffs = NA, notes.append = FALSE)
#3) Estimar el segundo modelo con controles y FWL ------------------------------
#La variable de interés es female
##3.1) Modelo####
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
db_fwl <- db %>% mutate(female_resid = lm(female ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)$residuals) %>%
mutate(ln_sal_resid = lm(ln_sal ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)$residuals)
#(iii) Dejar en la base solo las variables de interés
db_fwl <- db_fwl %>%
select(female_resid, ln_sal_resid) %>%
rename(female = female_resid)
#(iv) regresar los residuales de la variable resultado (ii) en los residuales de la variable de interés (iii):
modelo_4b_fwl <- lm(ln_sal_resid ~ female, data = db_fwl)
stargazer(modelo4b, modelo_4b_fwl,
type = "text",
omit = c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
#(iv) agregar los valores predichos a la base de datos:
#Usamos los errores predichos por el modelo 4b porque es el que genera el mejor ajuste
db$ln_sal_predicted <- predict(modelo4b)
female_boostrap_se_R10000 <- readRDS("stores/female_boostrap_se_R10000.rds")
female_boostrap_se_R10000
se <- sd(female_boostrap_se_R10000$t)
rm(se)
partialling_out <- function (data, index) {
#Función partialling-out: Esta función hace partilling-out para estimar el si existe una brecha de género en el salario por hora. Se usan como
#                          controles el nivel de educación, la edad, el tamaño de la firma, si es formal o informal, el oficio/ocupación de
#                          la persona y el estrato
#Parámetros:
#db: base de datos con la información de la GEIH
#index: número de observaciones en db. El índice facilita el uso de esta función con paquete boot
#Return: el coeficiente de la variable female obtenido al hacer partillaing out
db_resid <- data.frame(row.names = 1:nrow(data))
db_resid$x_resid <- lm(female ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1, data = data, subset = index )$residuals
db_resid$y_resid <- lm(ln_sal ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1, data = data, subset = index)$residuals
coef(lm( y_resid ~ x_resid, data = db_resid, subset = index))[2]
}
partialling_out(db, 1:nrow(db))
se_modelo4a <- summary(modelo4a)$coefficients[, "Std. Error"]
se_modelo4b <- summary(modelo4b)$coefficients[, "Std. Error"]
se_modelo4b_fwl <- summary(modelo_4b_fwl)$coefficients[, "Std. Error"]
se_modelo4b_fwl_boot <- c(NA, sd(female_boostrap_se_R10000$t)) #Este es el resultado de female_boostrap_se_R_10000
#Incluirlos en la tabla y darle formato a la tabla:
resultados_modelos <- stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "text",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = F,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "rsq", "ser")) # Conservar las estadísticas de interés
stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "latex",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = F,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "rsq", "ser")) # Conservar las estadísticas de interés
#Incluirlos en la tabla y darle formato a la tabla:
resultados_modelos <- stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "text",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = F,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "adj.rsq", "ser")) # Conservar las estadísticas de interés
stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "latex",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = F,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "adj.rsq", "ser")) # Conservar las estadísticas de interés
resultados_modelos
mean(db$ln_sal_predicted)
mean(db$ln_sal)
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
#2) Estimar el primero modelo sin controles  -----------------------------------
modelo4a <- lm(ln_sal ~ female, data = db)
stargazer(modelo4a, type = "text", star.cutoffs = NA, notes.append = FALSE)
modelo4b <- lm(ln_sal ~ female + nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)
stargazer(modelo4a, modelo4b,
type = "text",
omit =  c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
db_fwl <- db %>% mutate(female_resid = lm(female ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)$residuals) %>%
mutate(ln_sal_resid = lm(ln_sal ~ nivel_educ + age + I(age^2) + sizeFirm + formal + oficio + estrato1 ,data = db)$residuals)
db_fwl <- db_fwl %>%
select(female_resid, ln_sal_resid) %>%
rename(female = female_resid)
modelo_4b_fwl <- lm(ln_sal_resid ~ female, data = db_fwl)
stargazer(modelo4b, modelo_4b_fwl,
type = "text",
omit = c("Constant", "oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"),
star.cutoffs = NA,
notes.append = FALSE)
#(iv) agregar los valores predichos a la base de datos:
#Usamos los errores predichos por el modelo 4b porque es el que genera el mejor ajuste
db$ln_sal_predicted <- predict(modelo4b)
female_boostrap_se_R1000 <- readRDS("stores/female_boostrap_se_R1000.rds")
female_boostrap_se_R10000 <- readRDS("stores/female_boostrap_se_R10000.rds")
se_modelo4a <- summary(modelo4a)$coefficients[, "Std. Error"]
se_modelo4b <- summary(modelo4b)$coefficients[, "Std. Error"]
se_modelo4b_fwl <- summary(modelo_4b_fwl)$coefficients[, "Std. Error"]
se_modelo4b_fwl_boot <- c(NA, sd(female_boostrap_se_R10000$t)) #Este es el resultado de female_boostrap_se_R_10000
#Incluirlos en la tabla y darle formato a la tabla:
resultados_modelos <- stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "text",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = F,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "adj.rsq", "ser")) # Conservar las estadísticas de interés
mean(db$ln_sal)
mean(db$ln_sal_predicted)
#Incluirlos en la tabla y darle formato a la tabla:
resultados_modelos <- stargazer(modelo4a ,modelo4b, modelo_4b_fwl, modelo_4b_fwl,
type = "text",
omit = c("Constant","oficio", "nivel_educ", "age", "sizeFirm", "formal", "horas_ocup_prin", "estrato1"), # Nos mostrar controles
star.cutoffs = NA, # No mostrar asteriscos para la significancia
notes.append = FALSE, # No incluir notas
se = list(se_modelo4a, se_modelo4b, se_modelo4b_fwl, se_modelo4b_fwl_boot), #Incluir errores estándar especificados por nosotros
column.labels = c("Sin condicionar", "Condicionada", "FWL", "FWL Boot SE"),  #Ponerle nombres a los modelos
dep.var.labels.include = T,
dep.var.caption = "", # Remover titulo que dice "Dependent variable:"
title =  "Brecha salarial por género", #Ponerle título a la tabla
covariate.labels = c("Mujer"), # Renombrar covariables
keep.stat = c("n", "adj.rsq", "ser")) # Conservar las estadísticas de interés
##4.1) Colapsar base de datos a nivel de género y año####
#Nota: Se colapsa la base a nivel de género y año para la media del salario por horas
average_salary_per_age_db  <- db %>%
select(age, female, y_ingLab_m_ha) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(y_ingLab_m_ha))
db_sin_outliers <- db %>%
filter(y_ingLab_m_ha < 24297) %>%
filter(age < 62) %>%
mutate (female = as.factor(female))
#i) Colapsar la base a nivel de edad y salario por género (otra vez)
average_salary_per_age_db  <- db_sin_outliers %>%
select(age, female, ln_sal_predicted) %>%
group_by(age, female) %>%
summarise(mean_salary_per_hour = mean(ln_sal_predicted))
#ii) Gráfico ingreso relación ingreso/edad por género (otra vez)
salary_plot_2 <-ggplot(data = average_salary_per_age_db, mapping = aes( x = age , y = mean_salary_per_hour, group = female, color = female)) +
geom_smooth(method = "gam", fill="#69b3a2" ,se = T, level = 0.95) +
scale_x_continuous(breaks = c(20, 25, 30, 35, 40, 45, 50, 55, 60, 65)) +
labs(title = "Dinámica promedio salario por hora con la edad" , x = "Edad", y = "Promedio salario por hora", color = "") +
scale_color_manual(labels = c("Hombres", "Mujeres"), values = c("coral2", "deepskyblue")) +
theme_minimal()
salary_plot_2
ggsave("views/dinamica_promedio_salario_por_hora_con_la_edad.png")
edad_pico_fn<-function(data,index){
f<-lm(ln_sal~age+age2,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
pico_hombres_bootstrap_se_R1000 <- readRDS("stores/pico_hombres_bootstrap_se_R1000.rds")
pico_mujeres_bootstrap_se_R1000 <- readRDS("stores/pico_mujeres_bootstrap_se_R1000.rds")
db<- db %>% mutate(age2=age^2)
edad_pico_fn<-function(data,index){
f<-lm(ln_sal~age+age2,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
ig_boot <- boot(data=db, edad_pico_fn,R=1000)
ig_boot
confint(ig_boot$t)
confint(ig_boot$t, level = 0.95)
ig_boot$t
confint(ig_boot$t, level = 0.95)
?confint
ig_boot_t <- ig_boot$t
confint(ig_boot_t, level = 0.95)
confint(ig_boot_t)
#0) Alistar ambiente de trabajo ------------------------------------------------
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
db<- db %>% mutate(age2=age^2)
pico_hombres_bootstrap_se_R1000 <- readRDS("stores/pico_hombres_bootstrap_se_R1000.rds")
confint(pico_hombres_bootstrap_se_R1000, level= 0.95)
confint(pico_hombres_bootstrap_se_R1000$t, level= 0.95)
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ female + nivel_educ + age + age2 + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico <- boot(data=db, edad_pico_fn,R=1000)
edad_pico
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico <- boot(data=db, edad_pico_fn,R=1000)
edad_pico
db_mujeres <- db %>% filter(female == 1)
db_hombres <- db %>% filter(female == 0)
edad_pico_fn<-function(data,index){
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico_mujeres <- boot(data=db_mujeres, edad_pico_fn,R=1000)
2+2
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
edad_pico_mujeres <- boot(data=db_mujeres, edad_pico_fn,R=1000)
edad_pico_mujeres
pico_mujeres_bootstrap_se_R1000 <- readRDS("stores/pico_mujeres_bootstrap_se_R1000.rds")
pico_mujeres_bootstrap_se_R1000
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ age + age2 ,data, subset = index)
#f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico <- boot(data=db, edad_pico_fn,R=1000)
edad_pico
edad_pico_fn<-function(data,index){
#f<-lm(ln_sal ~ age + age2 ,data, subset = index)
f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico_modelo_4b <- boot(data=db, edad_pico_fn,R=1000)
edad_pico_modelo_4b
boot.ci(edad_pico_modelo_4b)
?boot.ci
boot.ci(edad_pico_modelo_4b, conf = 0.95)
confint(edad_pico_mujeres$t)
edad_pico_mujeres$t
p <- edad_pico_mujeres$t
p
confint(p)
typeof(p)
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
db<- db %>% mutate(age2=age^2)
db_mujeres <- db %>% filter(female == 1)
db_hombres <- db %>% filter(female == 0)
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
model <- lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,db)
model[2]
model$coefficients[2]
model$coefficients[3]
edad_pico_mujeres <- boot(data=db_mujeres, edad_pico_fn,R=1000)
#0) Alistar ambiente de trabajo ------------------------------------------------
rm(list = ls())
cat("\014")
#Cargar paquetes:
if(!require(pacman)) install.packages("pacman") ; require(pacman)
p_load(tidyverse #tidy up data
,stargazer #show regression results
,here #make commons paths to ease co working
,skimr #summary statistics
,boot #bootstrapping
,rio #export data
)
#Definir directorio de trabajo:
wd <- here()
setwd(wd)
rm(wd)
#Cargar datos:
db <- readRDS("stores/datos_modelos.rds") %>%
as_tibble()
#Establecer semilla:
set.seed(123)
#1) Organizar y limpiar datos antes de estimar el modelo -----------------------
#1.1) Volver female una variable númerica para poder usarla como variable de respuesta usando lm()
db <- db %>%
mutate(female = as.numeric(female)) %>%
mutate(female = ifelse(female == 2, 1, 0))
db<- db %>% mutate(age2=age^2)
db_mujeres <- db %>% filter(female == 1)
db_hombres <- db %>% filter(female == 0)
edad_pico_fn<-function(data,index){
f<-lm(ln_sal ~ age + age2 + female + nivel_educ + sizeFirm + formal + oficio + estrato1,data, subset = index)
b1<-f$coefficients[2]
b2<-f$coefficients[3]
age_pico<--b1/(2*b2)
return(age_pico)
}
edad_pico_mujeres <- boot(data=db_mujeres, edad_pico_fn,R=1000)
edad_pico_mujeres
edad_pico_hombres <- boot(data=db_hombres, edad_pico_fn,R=1000)
edad_pico_hombres[[t]]
edad_pico_hombres[["t"]]
confint(edad_pico_hombres,[["t"]])
confint(edad_pico_hombres, t)
confint(,edad_pico_hombres$t )
confint(edad_pico_hombres,edad_pico_hombres$t )
edad_pico_mujeres <- boot(data=db_mujeres, edad_pico_fn,R=1000)
edad_pico_hombres
edad_pico_mujeres
